name: iot-example-graphical-snap  # you probably want to 'snapcraft register <name>'
version: git # just for humans, typically '1.2+git' or '1.3.2'
summary: Single-line elevator pitch for your amazing snap # 79 char long summary
description: |
  This is my-snap's description. You have a paragraph or two to tell the
  most important story about your snap. Keep it under 100 words though,
  we live in tweetspace and your description wants to look good in the snap
  store.
confinement: strict
compression: lzo
grade: stable
base: core24

apps:
  iot-example-graphical-snap:
    command-chain: &_command-chain
      - bin/gpu-2404-wrapper
      - bin/wayland-launch
      - bin/setup-mir
      - bin/setup-x11
      - usr/bin/mir-x11-kiosk-launch
    command: &_command usr/bin/glxgears
    plugs: &_plugs
      - opengl
      - wayland
      - network-bind   # For Mir (to serve X11)

  daemon:
    daemon: simple
    restart-delay: 3s
    restart-condition: always
    command-chain: *_command-chain
    command: *_command
    plugs: *_plugs

plugs:
  gpu-2404:
    interface: content
    target: $SNAP/gpu-2404
    default-provider: mesa-2404

# We need the mir-x11-kiosk package from the Mir PPA
package-repositories:
  - type: apt
    ppa: mir-team/dev

environment:
  # Other, generally useful environment settings...
  # XDG config
  XDG_CACHE_HOME:  $SNAP_USER_COMMON/.cache
  XDG_CONFIG_HOME: $SNAP_USER_DATA/.config
  XDG_CONFIG_DIRS: $SNAP/etc/xdg
  XDG_DATA_DIRS:   $SNAP/usr/local/share:$SNAP/usr/share
  # XKB config
  XKB_CONFIG_ROOT: $SNAP/usr/share/X11/xkb

# The `layout` ensures that files can be found by applications where they are expected by the toolkit or application.
layout:
  /usr/share/libdrm:
    bind: $SNAP/gpu-2404/libdrm
  /usr/share/drirc.d:
    symlink: $SNAP/gpu-2404/drirc.d
  # X11
  /usr/bin/xkbcomp:
    symlink: $SNAP/usr/bin/xkbcomp
  /usr/share/X11:
    bind: $SNAP/usr/share/X11

parts:
  glxgears:
    plugin: nil
    stage-packages:
      - mesa-utils

  # A simple kiosk for X11 on Wayland
  mir-x11-kiosk:
    plugin: nil
    stage-packages:
      - mir-x11-kiosk
      - dmz-cursor-theme
      - xkb-data

  # Some utility scripts for setting up the X11/Mir
  env-setup:
    plugin: dump
    source: env-setup
    override-build: |
      sed --in-place s/\$\{CRAFT_ARCH_TRIPLET}/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/g $CRAFT_PART_BUILD/bin/*
      craftctl default

  # Some utility scripts for setting up the Wayland environment
  setup:
    plugin: dump
    source: wayland-launch
    override-build: |
      # The plugs needed to run Wayland. (wayland-launch checks them, setup.sh connects them)
      # You may add further plugs here if you want these options
      PLUGS="opengl wayland gpu-2404 network-bind"
      sed --in-place "s/%PLUGS%/$PLUGS/g" $CRAFT_PART_BUILD/bin/wayland-launch
      sed --in-place "s/%PLUGS%/$PLUGS/g" $CRAFT_PART_BUILD/bin/setup.sh
      craftctl default
    stage-packages:
      - inotify-tools

  gpu-2404:
    after:
      - glxgears
      - mir-x11-kiosk
      - env-setup
      - setup
    source: https://github.com/canonical/gpu-snap.git
    plugin: dump
    override-prime: |
      craftctl default
      ${CRAFT_PART_SRC}/bin/gpu-2404-cleanup mesa-2404
    prime:
      - bin/gpu-2404-wrapper

platforms:
  amd64:
  arm64:
  armhf:
